// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: dbmng.proto

package andproto

import (
	models "github.com/averageNetAdmin/andproxy/andproto/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Srv *models.Server `protobuf:"bytes,1,opt,name=srv,proto3" json:"srv,omitempty"`
}

func (x *CreateServerRequest) Reset() {
	*x = CreateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerRequest) ProtoMessage() {}

func (x *CreateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerRequest.ProtoReflect.Descriptor instead.
func (*CreateServerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{0}
}

func (x *CreateServerRequest) GetSrv() *models.Server {
	if x != nil {
		return x.Srv
	}
	return nil
}

type CreateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateServerResponse) Reset() {
	*x = CreateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerResponse) ProtoMessage() {}

func (x *CreateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerResponse.ProtoReflect.Descriptor instead.
func (*CreateServerResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{1}
}

func (x *CreateServerResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Srv *models.Server `protobuf:"bytes,1,opt,name=srv,proto3" json:"srv,omitempty"`
}

func (x *UpdateServerRequest) Reset() {
	*x = UpdateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerRequest) ProtoMessage() {}

func (x *UpdateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateServerRequest) GetSrv() *models.Server {
	if x != nil {
		return x.Srv
	}
	return nil
}

type DeleteServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteServerRequest) Reset() {
	*x = DeleteServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerRequest) ProtoMessage() {}

func (x *DeleteServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerRequest.ProtoReflect.Descriptor instead.
func (*DeleteServerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteServerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadServersRequest) Reset() {
	*x = ReadServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadServersRequest) ProtoMessage() {}

func (x *ReadServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadServersRequest.ProtoReflect.Descriptor instead.
func (*ReadServersRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{4}
}

func (x *ReadServersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadServersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadServersRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Srv       []*models.Server `protobuf:"bytes,1,rep,name=srv,proto3" json:"srv,omitempty"`
	RowsCount int64            `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadServersResponse) Reset() {
	*x = ReadServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadServersResponse) ProtoMessage() {}

func (x *ReadServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadServersResponse.ProtoReflect.Descriptor instead.
func (*ReadServersResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{5}
}

func (x *ReadServersResponse) GetSrv() []*models.Server {
	if x != nil {
		return x.Srv
	}
	return nil
}

func (x *ReadServersResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

type CreateServerPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool *models.ServerPool `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (x *CreateServerPoolRequest) Reset() {
	*x = CreateServerPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerPoolRequest) ProtoMessage() {}

func (x *CreateServerPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerPoolRequest.ProtoReflect.Descriptor instead.
func (*CreateServerPoolRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{6}
}

func (x *CreateServerPoolRequest) GetPool() *models.ServerPool {
	if x != nil {
		return x.Pool
	}
	return nil
}

type CreateServerPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateServerPoolResponse) Reset() {
	*x = CreateServerPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServerPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServerPoolResponse) ProtoMessage() {}

func (x *CreateServerPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServerPoolResponse.ProtoReflect.Descriptor instead.
func (*CreateServerPoolResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{7}
}

func (x *CreateServerPoolResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateServerPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool *models.ServerPool `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (x *UpdateServerPoolRequest) Reset() {
	*x = UpdateServerPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerPoolRequest) ProtoMessage() {}

func (x *UpdateServerPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerPoolRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerPoolRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateServerPoolRequest) GetPool() *models.ServerPool {
	if x != nil {
		return x.Pool
	}
	return nil
}

type DeleteServerPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteServerPoolRequest) Reset() {
	*x = DeleteServerPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServerPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServerPoolRequest) ProtoMessage() {}

func (x *DeleteServerPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServerPoolRequest.ProtoReflect.Descriptor instead.
func (*DeleteServerPoolRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteServerPoolRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadServerPoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadServerPoolsRequest) Reset() {
	*x = ReadServerPoolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadServerPoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadServerPoolsRequest) ProtoMessage() {}

func (x *ReadServerPoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadServerPoolsRequest.ProtoReflect.Descriptor instead.
func (*ReadServerPoolsRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{10}
}

func (x *ReadServerPoolsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadServerPoolsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadServerPoolsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadServerPoolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool      []*models.ServerPool `protobuf:"bytes,1,rep,name=pool,proto3" json:"pool,omitempty"`
	RowsCount int64                `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadServerPoolsResponse) Reset() {
	*x = ReadServerPoolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadServerPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadServerPoolsResponse) ProtoMessage() {}

func (x *ReadServerPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadServerPoolsResponse.ProtoReflect.Descriptor instead.
func (*ReadServerPoolsResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{11}
}

func (x *ReadServerPoolsResponse) GetPool() []*models.ServerPool {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *ReadServerPoolsResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

type CreateProxyFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fltr *models.ProxyFilter `protobuf:"bytes,1,opt,name=fltr,proto3" json:"fltr,omitempty"`
}

func (x *CreateProxyFilterRequest) Reset() {
	*x = CreateProxyFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProxyFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyFilterRequest) ProtoMessage() {}

func (x *CreateProxyFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyFilterRequest.ProtoReflect.Descriptor instead.
func (*CreateProxyFilterRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{12}
}

func (x *CreateProxyFilterRequest) GetFltr() *models.ProxyFilter {
	if x != nil {
		return x.Fltr
	}
	return nil
}

type CreateProxyFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateProxyFilterResponse) Reset() {
	*x = CreateProxyFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProxyFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProxyFilterResponse) ProtoMessage() {}

func (x *CreateProxyFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProxyFilterResponse.ProtoReflect.Descriptor instead.
func (*CreateProxyFilterResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{13}
}

func (x *CreateProxyFilterResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateProxyFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fltr *models.ProxyFilter `protobuf:"bytes,1,opt,name=fltr,proto3" json:"fltr,omitempty"`
}

func (x *UpdateProxyFilterRequest) Reset() {
	*x = UpdateProxyFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProxyFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyFilterRequest) ProtoMessage() {}

func (x *UpdateProxyFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyFilterRequest.ProtoReflect.Descriptor instead.
func (*UpdateProxyFilterRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateProxyFilterRequest) GetFltr() *models.ProxyFilter {
	if x != nil {
		return x.Fltr
	}
	return nil
}

type DeleteProxyFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProxyFilterRequest) Reset() {
	*x = DeleteProxyFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProxyFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyFilterRequest) ProtoMessage() {}

func (x *DeleteProxyFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyFilterRequest.ProtoReflect.Descriptor instead.
func (*DeleteProxyFilterRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteProxyFilterRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadProxyFiltersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadProxyFiltersRequest) Reset() {
	*x = ReadProxyFiltersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadProxyFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadProxyFiltersRequest) ProtoMessage() {}

func (x *ReadProxyFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadProxyFiltersRequest.ProtoReflect.Descriptor instead.
func (*ReadProxyFiltersRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{16}
}

func (x *ReadProxyFiltersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadProxyFiltersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadProxyFiltersRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadProxyFiltersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fltr      []*models.ProxyFilter `protobuf:"bytes,1,rep,name=fltr,proto3" json:"fltr,omitempty"`
	RowsCount int64                 `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadProxyFiltersResponse) Reset() {
	*x = ReadProxyFiltersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadProxyFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadProxyFiltersResponse) ProtoMessage() {}

func (x *ReadProxyFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadProxyFiltersResponse.ProtoReflect.Descriptor instead.
func (*ReadProxyFiltersResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{17}
}

func (x *ReadProxyFiltersResponse) GetFltr() []*models.ProxyFilter {
	if x != nil {
		return x.Fltr
	}
	return nil
}

func (x *ReadProxyFiltersResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

type CreateL4HandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hndlr *models.L4Handler `protobuf:"bytes,1,opt,name=hndlr,proto3" json:"hndlr,omitempty"`
}

func (x *CreateL4HandlerRequest) Reset() {
	*x = CreateL4HandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateL4HandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateL4HandlerRequest) ProtoMessage() {}

func (x *CreateL4HandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateL4HandlerRequest.ProtoReflect.Descriptor instead.
func (*CreateL4HandlerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{18}
}

func (x *CreateL4HandlerRequest) GetHndlr() *models.L4Handler {
	if x != nil {
		return x.Hndlr
	}
	return nil
}

type CreateL4HandlerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateL4HandlerResponse) Reset() {
	*x = CreateL4HandlerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateL4HandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateL4HandlerResponse) ProtoMessage() {}

func (x *CreateL4HandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateL4HandlerResponse.ProtoReflect.Descriptor instead.
func (*CreateL4HandlerResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{19}
}

func (x *CreateL4HandlerResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateL4HandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hndlr *models.L4Handler `protobuf:"bytes,1,opt,name=hndlr,proto3" json:"hndlr,omitempty"`
}

func (x *UpdateL4HandlerRequest) Reset() {
	*x = UpdateL4HandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateL4HandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateL4HandlerRequest) ProtoMessage() {}

func (x *UpdateL4HandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateL4HandlerRequest.ProtoReflect.Descriptor instead.
func (*UpdateL4HandlerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateL4HandlerRequest) GetHndlr() *models.L4Handler {
	if x != nil {
		return x.Hndlr
	}
	return nil
}

type DeleteL4HandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteL4HandlerRequest) Reset() {
	*x = DeleteL4HandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteL4HandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteL4HandlerRequest) ProtoMessage() {}

func (x *DeleteL4HandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteL4HandlerRequest.ProtoReflect.Descriptor instead.
func (*DeleteL4HandlerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteL4HandlerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadL4HandlersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadL4HandlersRequest) Reset() {
	*x = ReadL4HandlersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadL4HandlersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadL4HandlersRequest) ProtoMessage() {}

func (x *ReadL4HandlersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadL4HandlersRequest.ProtoReflect.Descriptor instead.
func (*ReadL4HandlersRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{22}
}

func (x *ReadL4HandlersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadL4HandlersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadL4HandlersRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadL4HandlersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hndlr     []*models.L4Handler `protobuf:"bytes,1,rep,name=hndlr,proto3" json:"hndlr,omitempty"`
	RowsCount int64               `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadL4HandlersResponse) Reset() {
	*x = ReadL4HandlersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadL4HandlersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadL4HandlersResponse) ProtoMessage() {}

func (x *ReadL4HandlersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadL4HandlersResponse.ProtoReflect.Descriptor instead.
func (*ReadL4HandlersResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{23}
}

func (x *ReadL4HandlersResponse) GetHndlr() []*models.L4Handler {
	if x != nil {
		return x.Hndlr
	}
	return nil
}

func (x *ReadL4HandlersResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

type CreateAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acl *models.Acl `protobuf:"bytes,1,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *CreateAclRequest) Reset() {
	*x = CreateAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAclRequest) ProtoMessage() {}

func (x *CreateAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAclRequest.ProtoReflect.Descriptor instead.
func (*CreateAclRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{24}
}

func (x *CreateAclRequest) GetAcl() *models.Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

type CreateAclResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateAclResponse) Reset() {
	*x = CreateAclResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAclResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAclResponse) ProtoMessage() {}

func (x *CreateAclResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAclResponse.ProtoReflect.Descriptor instead.
func (*CreateAclResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{25}
}

func (x *CreateAclResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acl *models.Acl `protobuf:"bytes,1,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *UpdateAclRequest) Reset() {
	*x = UpdateAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAclRequest) ProtoMessage() {}

func (x *UpdateAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAclRequest.ProtoReflect.Descriptor instead.
func (*UpdateAclRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateAclRequest) GetAcl() *models.Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

type DeleteAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAclRequest) Reset() {
	*x = DeleteAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAclRequest) ProtoMessage() {}

func (x *DeleteAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAclRequest.ProtoReflect.Descriptor instead.
func (*DeleteAclRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteAclRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadAclsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadAclsRequest) Reset() {
	*x = ReadAclsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAclsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAclsRequest) ProtoMessage() {}

func (x *ReadAclsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAclsRequest.ProtoReflect.Descriptor instead.
func (*ReadAclsRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{28}
}

func (x *ReadAclsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadAclsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadAclsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadAclsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acl       []*models.Acl `protobuf:"bytes,1,rep,name=acl,proto3" json:"acl,omitempty"`
	RowsCount int64         `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadAclsResponse) Reset() {
	*x = ReadAclsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAclsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAclsResponse) ProtoMessage() {}

func (x *ReadAclsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAclsResponse.ProtoReflect.Descriptor instead.
func (*ReadAclsResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{29}
}

func (x *ReadAclsResponse) GetAcl() []*models.Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *ReadAclsResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

type CreateHttpPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path *models.HttpPath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *CreateHttpPathRequest) Reset() {
	*x = CreateHttpPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHttpPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHttpPathRequest) ProtoMessage() {}

func (x *CreateHttpPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHttpPathRequest.ProtoReflect.Descriptor instead.
func (*CreateHttpPathRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{30}
}

func (x *CreateHttpPathRequest) GetPath() *models.HttpPath {
	if x != nil {
		return x.Path
	}
	return nil
}

type CreateHttpPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateHttpPathResponse) Reset() {
	*x = CreateHttpPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHttpPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHttpPathResponse) ProtoMessage() {}

func (x *CreateHttpPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHttpPathResponse.ProtoReflect.Descriptor instead.
func (*CreateHttpPathResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{31}
}

func (x *CreateHttpPathResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateHttpPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path *models.HttpPath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *UpdateHttpPathRequest) Reset() {
	*x = UpdateHttpPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHttpPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHttpPathRequest) ProtoMessage() {}

func (x *UpdateHttpPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHttpPathRequest.ProtoReflect.Descriptor instead.
func (*UpdateHttpPathRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateHttpPathRequest) GetPath() *models.HttpPath {
	if x != nil {
		return x.Path
	}
	return nil
}

type DeleteHttpPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteHttpPathRequest) Reset() {
	*x = DeleteHttpPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHttpPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHttpPathRequest) ProtoMessage() {}

func (x *DeleteHttpPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHttpPathRequest.ProtoReflect.Descriptor instead.
func (*DeleteHttpPathRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteHttpPathRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadHttpPathsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadHttpPathsRequest) Reset() {
	*x = ReadHttpPathsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHttpPathsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHttpPathsRequest) ProtoMessage() {}

func (x *ReadHttpPathsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHttpPathsRequest.ProtoReflect.Descriptor instead.
func (*ReadHttpPathsRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{34}
}

func (x *ReadHttpPathsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadHttpPathsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadHttpPathsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadHttpPathsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      []*models.HttpPath `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	RowsCount int64              `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadHttpPathsResponse) Reset() {
	*x = ReadHttpPathsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHttpPathsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHttpPathsResponse) ProtoMessage() {}

func (x *ReadHttpPathsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHttpPathsResponse.ProtoReflect.Descriptor instead.
func (*ReadHttpPathsResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{35}
}

func (x *ReadHttpPathsResponse) GetPath() []*models.HttpPath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *ReadHttpPathsResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

type CreateHttpHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *models.HttpHost `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *CreateHttpHostRequest) Reset() {
	*x = CreateHttpHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHttpHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHttpHostRequest) ProtoMessage() {}

func (x *CreateHttpHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHttpHostRequest.ProtoReflect.Descriptor instead.
func (*CreateHttpHostRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{36}
}

func (x *CreateHttpHostRequest) GetHost() *models.HttpHost {
	if x != nil {
		return x.Host
	}
	return nil
}

type CreateHttpHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateHttpHostResponse) Reset() {
	*x = CreateHttpHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHttpHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHttpHostResponse) ProtoMessage() {}

func (x *CreateHttpHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHttpHostResponse.ProtoReflect.Descriptor instead.
func (*CreateHttpHostResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{37}
}

func (x *CreateHttpHostResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateHttpHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *models.HttpHost `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *UpdateHttpHostRequest) Reset() {
	*x = UpdateHttpHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHttpHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHttpHostRequest) ProtoMessage() {}

func (x *UpdateHttpHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHttpHostRequest.ProtoReflect.Descriptor instead.
func (*UpdateHttpHostRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateHttpHostRequest) GetHost() *models.HttpHost {
	if x != nil {
		return x.Host
	}
	return nil
}

type DeleteHttpHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteHttpHostRequest) Reset() {
	*x = DeleteHttpHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHttpHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHttpHostRequest) ProtoMessage() {}

func (x *DeleteHttpHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHttpHostRequest.ProtoReflect.Descriptor instead.
func (*DeleteHttpHostRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteHttpHostRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadHttpHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadHttpHostsRequest) Reset() {
	*x = ReadHttpHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHttpHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHttpHostsRequest) ProtoMessage() {}

func (x *ReadHttpHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHttpHostsRequest.ProtoReflect.Descriptor instead.
func (*ReadHttpHostsRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{40}
}

func (x *ReadHttpHostsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadHttpHostsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadHttpHostsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadHttpHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      []*models.HttpHost `protobuf:"bytes,1,rep,name=host,proto3" json:"host,omitempty"`
	RowsCount int64              `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadHttpHostsResponse) Reset() {
	*x = ReadHttpHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHttpHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHttpHostsResponse) ProtoMessage() {}

func (x *ReadHttpHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHttpHostsResponse.ProtoReflect.Descriptor instead.
func (*ReadHttpHostsResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{41}
}

func (x *ReadHttpHostsResponse) GetHost() []*models.HttpHost {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ReadHttpHostsResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

type CreateHttpHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hndlr *models.HttpHandler `protobuf:"bytes,1,opt,name=hndlr,proto3" json:"hndlr,omitempty"`
}

func (x *CreateHttpHandlerRequest) Reset() {
	*x = CreateHttpHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHttpHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHttpHandlerRequest) ProtoMessage() {}

func (x *CreateHttpHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHttpHandlerRequest.ProtoReflect.Descriptor instead.
func (*CreateHttpHandlerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{42}
}

func (x *CreateHttpHandlerRequest) GetHndlr() *models.HttpHandler {
	if x != nil {
		return x.Hndlr
	}
	return nil
}

type CreateHttpHandlerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateHttpHandlerResponse) Reset() {
	*x = CreateHttpHandlerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHttpHandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHttpHandlerResponse) ProtoMessage() {}

func (x *CreateHttpHandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHttpHandlerResponse.ProtoReflect.Descriptor instead.
func (*CreateHttpHandlerResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{43}
}

func (x *CreateHttpHandlerResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateHttpHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hndlr *models.HttpHandler `protobuf:"bytes,1,opt,name=hndlr,proto3" json:"hndlr,omitempty"`
}

func (x *UpdateHttpHandlerRequest) Reset() {
	*x = UpdateHttpHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHttpHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHttpHandlerRequest) ProtoMessage() {}

func (x *UpdateHttpHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHttpHandlerRequest.ProtoReflect.Descriptor instead.
func (*UpdateHttpHandlerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateHttpHandlerRequest) GetHndlr() *models.HttpHandler {
	if x != nil {
		return x.Hndlr
	}
	return nil
}

type DeleteHttpHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteHttpHandlerRequest) Reset() {
	*x = DeleteHttpHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHttpHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHttpHandlerRequest) ProtoMessage() {}

func (x *DeleteHttpHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHttpHandlerRequest.ProtoReflect.Descriptor instead.
func (*DeleteHttpHandlerRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteHttpHandlerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadHttpHandlersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy string `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *ReadHttpHandlersRequest) Reset() {
	*x = ReadHttpHandlersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHttpHandlersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHttpHandlersRequest) ProtoMessage() {}

func (x *ReadHttpHandlersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHttpHandlersRequest.ProtoReflect.Descriptor instead.
func (*ReadHttpHandlersRequest) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{46}
}

func (x *ReadHttpHandlersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadHttpHandlersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadHttpHandlersRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type ReadHttpHandlersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hndlr     []*models.HttpHandler `protobuf:"bytes,1,rep,name=hndlr,proto3" json:"hndlr,omitempty"`
	RowsCount int64                 `protobuf:"varint,2,opt,name=rows_count,json=rowsCount,proto3" json:"rows_count,omitempty"`
}

func (x *ReadHttpHandlersResponse) Reset() {
	*x = ReadHttpHandlersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmng_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHttpHandlersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHttpHandlersResponse) ProtoMessage() {}

func (x *ReadHttpHandlersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmng_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHttpHandlersResponse.ProtoReflect.Descriptor instead.
func (*ReadHttpHandlersResponse) Descriptor() ([]byte, []int) {
	return file_dbmng_proto_rawDescGZIP(), []int{47}
}

func (x *ReadHttpHandlersResponse) GetHndlr() []*models.HttpHandler {
	if x != nil {
		return x.Hndlr
	}
	return nil
}

func (x *ReadHttpHandlersResponse) GetRowsCount() int64 {
	if x != nil {
		return x.RowsCount
	}
	return 0
}

var File_dbmng_proto protoreflect.FileDescriptor

var file_dbmng_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x64, 0x62, 0x6d, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6c, 0x34, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x72, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x03, 0x73, 0x72, 0x76, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x72, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x03, 0x73, 0x72, 0x76, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x12, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x55, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x03, 0x73, 0x72, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x03, 0x73, 0x72, 0x76,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x40, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x6f,
	0x6c, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x22,
	0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x16, 0x52, 0x65,
	0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x5f, 0x0a, 0x17, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x6c, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x66, 0x6c, 0x74, 0x72,
	0x22, 0x2b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x6c, 0x74,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x66, 0x6c, 0x74,
	0x72, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a,
	0x17, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22,
	0x61, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x66,
	0x6c, 0x74, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x66,
	0x6c, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x40, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x34, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05,
	0x68, 0x6e, 0x64, 0x6c, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x05, 0x68,
	0x6e, 0x64, 0x6c, 0x72, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x34,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x40, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x68, 0x6e, 0x64,
	0x6c, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x05, 0x68, 0x6e, 0x64, 0x6c,
	0x72, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x15, 0x52,
	0x65, 0x61, 0x64, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x5f, 0x0a, 0x16, 0x52,
	0x65, 0x61, 0x64, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x68, 0x6e, 0x64, 0x6c, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x34, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x05, 0x68, 0x6e, 0x64, 0x6c, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6c, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x23,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6c,
	0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x0f, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x63, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x22, 0x4f, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6c,
	0x52, 0x03, 0x61, 0x63, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74,
	0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x22, 0x5b, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x3c, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x28, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d,
	0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x5b, 0x0a,
	0x15, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x72, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x68, 0x6e, 0x64, 0x6c, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x05, 0x68, 0x6e, 0x64, 0x6c, 0x72,
	0x22, 0x2b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x68, 0x6e, 0x64,
	0x6c, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x05, 0x68, 0x6e,
	0x64, 0x6c, 0x72, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x74, 0x74,
	0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x60, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x22, 0x63, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x68, 0x6e, 0x64, 0x6c, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x52, 0x05, 0x68, 0x6e, 0x64, 0x6c, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f, 0x77,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xb3, 0x13, 0x0a, 0x05, 0x44, 0x62, 0x6d, 0x6e, 0x67,
	0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x34, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x34, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x4c, 0x34, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6c, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63,
	0x6c, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41,
	0x63, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x52, 0x65,
	0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x74, 0x74,
	0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0d, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48,
	0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74,
	0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x6e, 0x64, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2f, 0x61, 0x6e, 0x64, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x61, 0x6e, 0x64,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dbmng_proto_rawDescOnce sync.Once
	file_dbmng_proto_rawDescData = file_dbmng_proto_rawDesc
)

func file_dbmng_proto_rawDescGZIP() []byte {
	file_dbmng_proto_rawDescOnce.Do(func() {
		file_dbmng_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbmng_proto_rawDescData)
	})
	return file_dbmng_proto_rawDescData
}

var file_dbmng_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_dbmng_proto_goTypes = []interface{}{
	(*CreateServerRequest)(nil),       // 0: proto.CreateServerRequest
	(*CreateServerResponse)(nil),      // 1: proto.CreateServerResponse
	(*UpdateServerRequest)(nil),       // 2: proto.UpdateServerRequest
	(*DeleteServerRequest)(nil),       // 3: proto.DeleteServerRequest
	(*ReadServersRequest)(nil),        // 4: proto.ReadServersRequest
	(*ReadServersResponse)(nil),       // 5: proto.ReadServersResponse
	(*CreateServerPoolRequest)(nil),   // 6: proto.CreateServerPoolRequest
	(*CreateServerPoolResponse)(nil),  // 7: proto.CreateServerPoolResponse
	(*UpdateServerPoolRequest)(nil),   // 8: proto.UpdateServerPoolRequest
	(*DeleteServerPoolRequest)(nil),   // 9: proto.DeleteServerPoolRequest
	(*ReadServerPoolsRequest)(nil),    // 10: proto.ReadServerPoolsRequest
	(*ReadServerPoolsResponse)(nil),   // 11: proto.ReadServerPoolsResponse
	(*CreateProxyFilterRequest)(nil),  // 12: proto.CreateProxyFilterRequest
	(*CreateProxyFilterResponse)(nil), // 13: proto.CreateProxyFilterResponse
	(*UpdateProxyFilterRequest)(nil),  // 14: proto.UpdateProxyFilterRequest
	(*DeleteProxyFilterRequest)(nil),  // 15: proto.DeleteProxyFilterRequest
	(*ReadProxyFiltersRequest)(nil),   // 16: proto.ReadProxyFiltersRequest
	(*ReadProxyFiltersResponse)(nil),  // 17: proto.ReadProxyFiltersResponse
	(*CreateL4HandlerRequest)(nil),    // 18: proto.CreateL4HandlerRequest
	(*CreateL4HandlerResponse)(nil),   // 19: proto.CreateL4HandlerResponse
	(*UpdateL4HandlerRequest)(nil),    // 20: proto.UpdateL4HandlerRequest
	(*DeleteL4HandlerRequest)(nil),    // 21: proto.DeleteL4HandlerRequest
	(*ReadL4HandlersRequest)(nil),     // 22: proto.ReadL4HandlersRequest
	(*ReadL4HandlersResponse)(nil),    // 23: proto.ReadL4HandlersResponse
	(*CreateAclRequest)(nil),          // 24: proto.CreateAclRequest
	(*CreateAclResponse)(nil),         // 25: proto.CreateAclResponse
	(*UpdateAclRequest)(nil),          // 26: proto.UpdateAclRequest
	(*DeleteAclRequest)(nil),          // 27: proto.DeleteAclRequest
	(*ReadAclsRequest)(nil),           // 28: proto.ReadAclsRequest
	(*ReadAclsResponse)(nil),          // 29: proto.ReadAclsResponse
	(*CreateHttpPathRequest)(nil),     // 30: proto.CreateHttpPathRequest
	(*CreateHttpPathResponse)(nil),    // 31: proto.CreateHttpPathResponse
	(*UpdateHttpPathRequest)(nil),     // 32: proto.UpdateHttpPathRequest
	(*DeleteHttpPathRequest)(nil),     // 33: proto.DeleteHttpPathRequest
	(*ReadHttpPathsRequest)(nil),      // 34: proto.ReadHttpPathsRequest
	(*ReadHttpPathsResponse)(nil),     // 35: proto.ReadHttpPathsResponse
	(*CreateHttpHostRequest)(nil),     // 36: proto.CreateHttpHostRequest
	(*CreateHttpHostResponse)(nil),    // 37: proto.CreateHttpHostResponse
	(*UpdateHttpHostRequest)(nil),     // 38: proto.UpdateHttpHostRequest
	(*DeleteHttpHostRequest)(nil),     // 39: proto.DeleteHttpHostRequest
	(*ReadHttpHostsRequest)(nil),      // 40: proto.ReadHttpHostsRequest
	(*ReadHttpHostsResponse)(nil),     // 41: proto.ReadHttpHostsResponse
	(*CreateHttpHandlerRequest)(nil),  // 42: proto.CreateHttpHandlerRequest
	(*CreateHttpHandlerResponse)(nil), // 43: proto.CreateHttpHandlerResponse
	(*UpdateHttpHandlerRequest)(nil),  // 44: proto.UpdateHttpHandlerRequest
	(*DeleteHttpHandlerRequest)(nil),  // 45: proto.DeleteHttpHandlerRequest
	(*ReadHttpHandlersRequest)(nil),   // 46: proto.ReadHttpHandlersRequest
	(*ReadHttpHandlersResponse)(nil),  // 47: proto.ReadHttpHandlersResponse
	(*models.Server)(nil),             // 48: proto.Server
	(*models.ServerPool)(nil),         // 49: proto.ServerPool
	(*models.ProxyFilter)(nil),        // 50: proto.ProxyFilter
	(*models.L4Handler)(nil),          // 51: proto.L4Handler
	(*models.Acl)(nil),                // 52: proto.Acl
	(*models.HttpPath)(nil),           // 53: proto.HttpPath
	(*models.HttpHost)(nil),           // 54: proto.HttpHost
	(*models.HttpHandler)(nil),        // 55: proto.HttpHandler
	(*emptypb.Empty)(nil),             // 56: google.protobuf.Empty
}
var file_dbmng_proto_depIdxs = []int32{
	48, // 0: proto.CreateServerRequest.srv:type_name -> proto.Server
	48, // 1: proto.UpdateServerRequest.srv:type_name -> proto.Server
	48, // 2: proto.ReadServersResponse.srv:type_name -> proto.Server
	49, // 3: proto.CreateServerPoolRequest.pool:type_name -> proto.ServerPool
	49, // 4: proto.UpdateServerPoolRequest.pool:type_name -> proto.ServerPool
	49, // 5: proto.ReadServerPoolsResponse.pool:type_name -> proto.ServerPool
	50, // 6: proto.CreateProxyFilterRequest.fltr:type_name -> proto.ProxyFilter
	50, // 7: proto.UpdateProxyFilterRequest.fltr:type_name -> proto.ProxyFilter
	50, // 8: proto.ReadProxyFiltersResponse.fltr:type_name -> proto.ProxyFilter
	51, // 9: proto.CreateL4HandlerRequest.hndlr:type_name -> proto.L4Handler
	51, // 10: proto.UpdateL4HandlerRequest.hndlr:type_name -> proto.L4Handler
	51, // 11: proto.ReadL4HandlersResponse.hndlr:type_name -> proto.L4Handler
	52, // 12: proto.CreateAclRequest.acl:type_name -> proto.Acl
	52, // 13: proto.UpdateAclRequest.acl:type_name -> proto.Acl
	52, // 14: proto.ReadAclsResponse.acl:type_name -> proto.Acl
	53, // 15: proto.CreateHttpPathRequest.path:type_name -> proto.HttpPath
	53, // 16: proto.UpdateHttpPathRequest.path:type_name -> proto.HttpPath
	53, // 17: proto.ReadHttpPathsResponse.path:type_name -> proto.HttpPath
	54, // 18: proto.CreateHttpHostRequest.host:type_name -> proto.HttpHost
	54, // 19: proto.UpdateHttpHostRequest.host:type_name -> proto.HttpHost
	54, // 20: proto.ReadHttpHostsResponse.host:type_name -> proto.HttpHost
	55, // 21: proto.CreateHttpHandlerRequest.hndlr:type_name -> proto.HttpHandler
	55, // 22: proto.UpdateHttpHandlerRequest.hndlr:type_name -> proto.HttpHandler
	55, // 23: proto.ReadHttpHandlersResponse.hndlr:type_name -> proto.HttpHandler
	0,  // 24: proto.Dbmng.CreateServer:input_type -> proto.CreateServerRequest
	2,  // 25: proto.Dbmng.UpdateServer:input_type -> proto.UpdateServerRequest
	3,  // 26: proto.Dbmng.DeleteServer:input_type -> proto.DeleteServerRequest
	4,  // 27: proto.Dbmng.ReadServers:input_type -> proto.ReadServersRequest
	6,  // 28: proto.Dbmng.CreateServerPool:input_type -> proto.CreateServerPoolRequest
	8,  // 29: proto.Dbmng.UpdateServerPool:input_type -> proto.UpdateServerPoolRequest
	9,  // 30: proto.Dbmng.DeleteServerPool:input_type -> proto.DeleteServerPoolRequest
	10, // 31: proto.Dbmng.ReadServerPools:input_type -> proto.ReadServerPoolsRequest
	12, // 32: proto.Dbmng.CreateProxyFilter:input_type -> proto.CreateProxyFilterRequest
	14, // 33: proto.Dbmng.UpdateProxyFilter:input_type -> proto.UpdateProxyFilterRequest
	15, // 34: proto.Dbmng.DeleteProxyFilter:input_type -> proto.DeleteProxyFilterRequest
	16, // 35: proto.Dbmng.ReadProxyFilters:input_type -> proto.ReadProxyFiltersRequest
	18, // 36: proto.Dbmng.CreateL4Handler:input_type -> proto.CreateL4HandlerRequest
	20, // 37: proto.Dbmng.UpdateL4Handler:input_type -> proto.UpdateL4HandlerRequest
	21, // 38: proto.Dbmng.DeleteL4Handler:input_type -> proto.DeleteL4HandlerRequest
	22, // 39: proto.Dbmng.ReadL4Handlers:input_type -> proto.ReadL4HandlersRequest
	24, // 40: proto.Dbmng.CreateAcl:input_type -> proto.CreateAclRequest
	26, // 41: proto.Dbmng.UpdateAcl:input_type -> proto.UpdateAclRequest
	27, // 42: proto.Dbmng.DeleteAcl:input_type -> proto.DeleteAclRequest
	28, // 43: proto.Dbmng.ReadAcls:input_type -> proto.ReadAclsRequest
	30, // 44: proto.Dbmng.CreateHttpPath:input_type -> proto.CreateHttpPathRequest
	32, // 45: proto.Dbmng.UpdateHttpPath:input_type -> proto.UpdateHttpPathRequest
	33, // 46: proto.Dbmng.DeleteHttpPath:input_type -> proto.DeleteHttpPathRequest
	34, // 47: proto.Dbmng.ReadHttpPaths:input_type -> proto.ReadHttpPathsRequest
	36, // 48: proto.Dbmng.CreateHttpHost:input_type -> proto.CreateHttpHostRequest
	38, // 49: proto.Dbmng.UpdateHttpHost:input_type -> proto.UpdateHttpHostRequest
	39, // 50: proto.Dbmng.DeleteHttpHost:input_type -> proto.DeleteHttpHostRequest
	40, // 51: proto.Dbmng.ReadHttpHosts:input_type -> proto.ReadHttpHostsRequest
	42, // 52: proto.Dbmng.CreateHttpHandler:input_type -> proto.CreateHttpHandlerRequest
	44, // 53: proto.Dbmng.UpdateHttpHandler:input_type -> proto.UpdateHttpHandlerRequest
	45, // 54: proto.Dbmng.DeleteHttpHandler:input_type -> proto.DeleteHttpHandlerRequest
	46, // 55: proto.Dbmng.ReadHttpHandlers:input_type -> proto.ReadHttpHandlersRequest
	1,  // 56: proto.Dbmng.CreateServer:output_type -> proto.CreateServerResponse
	56, // 57: proto.Dbmng.UpdateServer:output_type -> google.protobuf.Empty
	56, // 58: proto.Dbmng.DeleteServer:output_type -> google.protobuf.Empty
	5,  // 59: proto.Dbmng.ReadServers:output_type -> proto.ReadServersResponse
	7,  // 60: proto.Dbmng.CreateServerPool:output_type -> proto.CreateServerPoolResponse
	56, // 61: proto.Dbmng.UpdateServerPool:output_type -> google.protobuf.Empty
	56, // 62: proto.Dbmng.DeleteServerPool:output_type -> google.protobuf.Empty
	11, // 63: proto.Dbmng.ReadServerPools:output_type -> proto.ReadServerPoolsResponse
	13, // 64: proto.Dbmng.CreateProxyFilter:output_type -> proto.CreateProxyFilterResponse
	56, // 65: proto.Dbmng.UpdateProxyFilter:output_type -> google.protobuf.Empty
	56, // 66: proto.Dbmng.DeleteProxyFilter:output_type -> google.protobuf.Empty
	17, // 67: proto.Dbmng.ReadProxyFilters:output_type -> proto.ReadProxyFiltersResponse
	19, // 68: proto.Dbmng.CreateL4Handler:output_type -> proto.CreateL4HandlerResponse
	56, // 69: proto.Dbmng.UpdateL4Handler:output_type -> google.protobuf.Empty
	56, // 70: proto.Dbmng.DeleteL4Handler:output_type -> google.protobuf.Empty
	23, // 71: proto.Dbmng.ReadL4Handlers:output_type -> proto.ReadL4HandlersResponse
	25, // 72: proto.Dbmng.CreateAcl:output_type -> proto.CreateAclResponse
	56, // 73: proto.Dbmng.UpdateAcl:output_type -> google.protobuf.Empty
	56, // 74: proto.Dbmng.DeleteAcl:output_type -> google.protobuf.Empty
	29, // 75: proto.Dbmng.ReadAcls:output_type -> proto.ReadAclsResponse
	31, // 76: proto.Dbmng.CreateHttpPath:output_type -> proto.CreateHttpPathResponse
	56, // 77: proto.Dbmng.UpdateHttpPath:output_type -> google.protobuf.Empty
	56, // 78: proto.Dbmng.DeleteHttpPath:output_type -> google.protobuf.Empty
	35, // 79: proto.Dbmng.ReadHttpPaths:output_type -> proto.ReadHttpPathsResponse
	37, // 80: proto.Dbmng.CreateHttpHost:output_type -> proto.CreateHttpHostResponse
	56, // 81: proto.Dbmng.UpdateHttpHost:output_type -> google.protobuf.Empty
	56, // 82: proto.Dbmng.DeleteHttpHost:output_type -> google.protobuf.Empty
	41, // 83: proto.Dbmng.ReadHttpHosts:output_type -> proto.ReadHttpHostsResponse
	43, // 84: proto.Dbmng.CreateHttpHandler:output_type -> proto.CreateHttpHandlerResponse
	56, // 85: proto.Dbmng.UpdateHttpHandler:output_type -> google.protobuf.Empty
	56, // 86: proto.Dbmng.DeleteHttpHandler:output_type -> google.protobuf.Empty
	47, // 87: proto.Dbmng.ReadHttpHandlers:output_type -> proto.ReadHttpHandlersResponse
	56, // [56:88] is the sub-list for method output_type
	24, // [24:56] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_dbmng_proto_init() }
func file_dbmng_proto_init() {
	if File_dbmng_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dbmng_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServerPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServerPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadServerPoolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadServerPoolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProxyFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProxyFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProxyFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProxyFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadProxyFiltersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadProxyFiltersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateL4HandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateL4HandlerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateL4HandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteL4HandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadL4HandlersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadL4HandlersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAclResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAclsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAclsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHttpPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHttpPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHttpPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHttpPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHttpPathsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHttpPathsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHttpHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHttpHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHttpHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHttpHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHttpHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHttpHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHttpHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHttpHandlerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHttpHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHttpHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHttpHandlersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmng_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadHttpHandlersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbmng_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dbmng_proto_goTypes,
		DependencyIndexes: file_dbmng_proto_depIdxs,
		MessageInfos:      file_dbmng_proto_msgTypes,
	}.Build()
	File_dbmng_proto = out.File
	file_dbmng_proto_rawDesc = nil
	file_dbmng_proto_goTypes = nil
	file_dbmng_proto_depIdxs = nil
}
