// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: http_handler.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HttpHandler_Status int32

const (
	HttpHandler_Unset   HttpHandler_Status = 0
	HttpHandler_Listen  HttpHandler_Status = 1
	HttpHandler_Stopped HttpHandler_Status = 2
)

// Enum value maps for HttpHandler_Status.
var (
	HttpHandler_Status_name = map[int32]string{
		0: "Unset",
		1: "Listen",
		2: "Stopped",
	}
	HttpHandler_Status_value = map[string]int32{
		"Unset":   0,
		"Listen":  1,
		"Stopped": 2,
	}
)

func (x HttpHandler_Status) Enum() *HttpHandler_Status {
	p := new(HttpHandler_Status)
	*p = x
	return p
}

func (x HttpHandler_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpHandler_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_http_handler_proto_enumTypes[0].Descriptor()
}

func (HttpHandler_Status) Type() protoreflect.EnumType {
	return &file_http_handler_proto_enumTypes[0]
}

func (x HttpHandler_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpHandler_Status.Descriptor instead.
func (HttpHandler_Status) EnumDescriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{0, 0}
}

type HttpHost_Status int32

const (
	HttpHost_Unset    HttpHost_Status = 0
	HttpHost_Active   HttpHost_Status = 1
	HttpHost_Disabled HttpHost_Status = 2
)

// Enum value maps for HttpHost_Status.
var (
	HttpHost_Status_name = map[int32]string{
		0: "Unset",
		1: "Active",
		2: "Disabled",
	}
	HttpHost_Status_value = map[string]int32{
		"Unset":    0,
		"Active":   1,
		"Disabled": 2,
	}
)

func (x HttpHost_Status) Enum() *HttpHost_Status {
	p := new(HttpHost_Status)
	*p = x
	return p
}

func (x HttpHost_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpHost_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_http_handler_proto_enumTypes[1].Descriptor()
}

func (HttpHost_Status) Type() protoreflect.EnumType {
	return &file_http_handler_proto_enumTypes[1]
}

func (x HttpHost_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpHost_Status.Descriptor instead.
func (HttpHost_Status) EnumDescriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{1, 0}
}

type HttpPath_Status int32

const (
	HttpPath_Unset    HttpPath_Status = 0
	HttpPath_Active   HttpPath_Status = 1
	HttpPath_Disabled HttpPath_Status = 2
)

// Enum value maps for HttpPath_Status.
var (
	HttpPath_Status_name = map[int32]string{
		0: "Unset",
		1: "Active",
		2: "Disabled",
	}
	HttpPath_Status_value = map[string]int32{
		"Unset":    0,
		"Active":   1,
		"Disabled": 2,
	}
)

func (x HttpPath_Status) Enum() *HttpPath_Status {
	p := new(HttpPath_Status)
	*p = x
	return p
}

func (x HttpPath_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpPath_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_http_handler_proto_enumTypes[2].Descriptor()
}

func (HttpPath_Status) Type() protoreflect.EnumType {
	return &file_http_handler_proto_enumTypes[2]
}

func (x HttpPath_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpPath_Status.Descriptor instead.
func (HttpPath_Status) EnumDescriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{2, 0}
}

type HttpHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Port           int32              `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Hosts          []int64            `protobuf:"varint,4,rep,packed,name=hosts,proto3" json:"hosts,omitempty"`
	Secure         bool               `protobuf:"varint,5,opt,name=secure,proto3" json:"secure,omitempty"`
	MaxConnections int64              `protobuf:"varint,6,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	Status         HttpHandler_Status `protobuf:"varint,7,opt,name=status,proto3,enum=proto.HttpHandler_Status" json:"status,omitempty"`
}

func (x *HttpHandler) Reset() {
	*x = HttpHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_handler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHandler) ProtoMessage() {}

func (x *HttpHandler) ProtoReflect() protoreflect.Message {
	mi := &file_http_handler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHandler.ProtoReflect.Descriptor instead.
func (*HttpHandler) Descriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{0}
}

func (x *HttpHandler) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HttpHandler) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpHandler) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *HttpHandler) GetHosts() []int64 {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *HttpHandler) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

func (x *HttpHandler) GetMaxConnections() int64 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *HttpHandler) GetStatus() HttpHandler_Status {
	if x != nil {
		return x.Status
	}
	return HttpHandler_Unset
}

type HttpHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Address        string          `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CertPath       string          `protobuf:"bytes,3,opt,name=cert_path,json=certPath,proto3" json:"cert_path,omitempty"`
	CertKeyPath    string          `protobuf:"bytes,4,opt,name=cert_key_path,json=certKeyPath,proto3" json:"cert_key_path,omitempty"`
	Paths          []int64         `protobuf:"varint,5,rep,packed,name=paths,proto3" json:"paths,omitempty"`
	MaxConnections int64           `protobuf:"varint,6,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	Status         HttpHost_Status `protobuf:"varint,7,opt,name=status,proto3,enum=proto.HttpHost_Status" json:"status,omitempty"`
}

func (x *HttpHost) Reset() {
	*x = HttpHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_handler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHost) ProtoMessage() {}

func (x *HttpHost) ProtoReflect() protoreflect.Message {
	mi := &file_http_handler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHost.ProtoReflect.Descriptor instead.
func (*HttpHost) Descriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{1}
}

func (x *HttpHost) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HttpHost) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HttpHost) GetCertPath() string {
	if x != nil {
		return x.CertPath
	}
	return ""
}

func (x *HttpHost) GetCertKeyPath() string {
	if x != nil {
		return x.CertKeyPath
	}
	return ""
}

func (x *HttpHost) GetPaths() []int64 {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *HttpHost) GetMaxConnections() int64 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *HttpHost) GetStatus() HttpHost_Status {
	if x != nil {
		return x.Status
	}
	return HttpHost_Unset
}

type HttpPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path           string              `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	EnableCaching  bool                `protobuf:"varint,3,opt,name=enable_caching,json=enableCaching,proto3" json:"enable_caching,omitempty"`
	RequestTimeout int64               `protobuf:"varint,4,opt,name=request_timeout,json=requestTimeout,proto3" json:"request_timeout,omitempty"`
	Type           string              `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	SetInput       *HttpParams         `protobuf:"bytes,6,opt,name=set_input,json=setInput,proto3" json:"set_input,omitempty"`
	SetOutput      *HttpParams         `protobuf:"bytes,7,opt,name=set_output,json=setOutput,proto3" json:"set_output,omitempty"`
	StaticResponse *StaticHttpResponse `protobuf:"bytes,8,opt,name=static_response,json=staticResponse,proto3" json:"static_response,omitempty"`
	ProxyFilters   []int64             `protobuf:"varint,9,rep,packed,name=proxy_filters,json=proxyFilters,proto3" json:"proxy_filters,omitempty"`
	MaxConnections int64               `protobuf:"varint,10,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	Status         HttpPath_Status     `protobuf:"varint,11,opt,name=status,proto3,enum=proto.HttpPath_Status" json:"status,omitempty"`
}

func (x *HttpPath) Reset() {
	*x = HttpPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_handler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpPath) ProtoMessage() {}

func (x *HttpPath) ProtoReflect() protoreflect.Message {
	mi := &file_http_handler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpPath.ProtoReflect.Descriptor instead.
func (*HttpPath) Descriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{2}
}

func (x *HttpPath) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HttpPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HttpPath) GetEnableCaching() bool {
	if x != nil {
		return x.EnableCaching
	}
	return false
}

func (x *HttpPath) GetRequestTimeout() int64 {
	if x != nil {
		return x.RequestTimeout
	}
	return 0
}

func (x *HttpPath) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HttpPath) GetSetInput() *HttpParams {
	if x != nil {
		return x.SetInput
	}
	return nil
}

func (x *HttpPath) GetSetOutput() *HttpParams {
	if x != nil {
		return x.SetOutput
	}
	return nil
}

func (x *HttpPath) GetStaticResponse() *StaticHttpResponse {
	if x != nil {
		return x.StaticResponse
	}
	return nil
}

func (x *HttpPath) GetProxyFilters() []int64 {
	if x != nil {
		return x.ProxyFilters
	}
	return nil
}

func (x *HttpPath) GetMaxConnections() int64 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *HttpPath) GetStatus() HttpPath_Status {
	if x != nil {
		return x.Status
	}
	return HttpPath_Unset
}

type HttpParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []*HttpHeader `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Cookies []*HttpCookie `protobuf:"bytes,2,rep,name=cookies,proto3" json:"cookies,omitempty"`
}

func (x *HttpParams) Reset() {
	*x = HttpParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_handler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpParams) ProtoMessage() {}

func (x *HttpParams) ProtoReflect() protoreflect.Message {
	mi := &file_http_handler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpParams.ProtoReflect.Descriptor instead.
func (*HttpParams) Descriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{3}
}

func (x *HttpParams) GetHeaders() []*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpParams) GetCookies() []*HttpCookie {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type HttpCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HttpCookie) Reset() {
	*x = HttpCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_handler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpCookie) ProtoMessage() {}

func (x *HttpCookie) ProtoReflect() protoreflect.Message {
	mi := &file_http_handler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpCookie.ProtoReflect.Descriptor instead.
func (*HttpCookie) Descriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{4}
}

func (x *HttpCookie) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HttpCookie) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HttpHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HttpHeader) Reset() {
	*x = HttpHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_handler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHeader) ProtoMessage() {}

func (x *HttpHeader) ProtoReflect() protoreflect.Message {
	mi := &file_http_handler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHeader.ProtoReflect.Descriptor instead.
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{5}
}

func (x *HttpHeader) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HttpHeader) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StaticHttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	RedirectTo  string `protobuf:"bytes,2,opt,name=redirect_to,json=redirectTo,proto3" json:"redirect_to,omitempty"`
	AddPrevPath bool   `protobuf:"varint,3,opt,name=add_prev_path,json=addPrevPath,proto3" json:"add_prev_path,omitempty"`
	CustomBody  string `protobuf:"bytes,4,opt,name=custom_body,json=customBody,proto3" json:"custom_body,omitempty"`
}

func (x *StaticHttpResponse) Reset() {
	*x = StaticHttpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_handler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticHttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticHttpResponse) ProtoMessage() {}

func (x *StaticHttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_handler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticHttpResponse.ProtoReflect.Descriptor instead.
func (*StaticHttpResponse) Descriptor() ([]byte, []int) {
	return file_http_handler_proto_rawDescGZIP(), []int{6}
}

func (x *StaticHttpResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StaticHttpResponse) GetRedirectTo() string {
	if x != nil {
		return x.RedirectTo
	}
	return ""
}

func (x *StaticHttpResponse) GetAddPrevPath() bool {
	if x != nil {
		return x.AddPrevPath
	}
	return false
}

func (x *StaticHttpResponse) GetCustomBody() string {
	if x != nil {
		return x.CustomBody
	}
	return ""
}

var File_http_handler_proto protoreflect.FileDescriptor

var file_http_handler_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x01, 0x0a,
	0x0b, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x02, 0x22, 0x93, 0x02, 0x0a,
	0x08, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x22, 0x0a, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61,
	0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x48, 0x6f, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a,
	0x05, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x02, 0x22, 0xe5, 0x03, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x5f, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x09,
	0x73, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x22, 0x66, 0x0a, 0x0a, 0x48, 0x74,
	0x74, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x73, 0x22, 0x34, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x50, 0x72, 0x65, 0x76, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42,
	0x6f, 0x64, 0x79, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x61, 0x6e, 0x64, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x61, 0x6e, 0x64, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x3b, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_handler_proto_rawDescOnce sync.Once
	file_http_handler_proto_rawDescData = file_http_handler_proto_rawDesc
)

func file_http_handler_proto_rawDescGZIP() []byte {
	file_http_handler_proto_rawDescOnce.Do(func() {
		file_http_handler_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_handler_proto_rawDescData)
	})
	return file_http_handler_proto_rawDescData
}

var file_http_handler_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_http_handler_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_http_handler_proto_goTypes = []interface{}{
	(HttpHandler_Status)(0),    // 0: proto.HttpHandler.Status
	(HttpHost_Status)(0),       // 1: proto.HttpHost.Status
	(HttpPath_Status)(0),       // 2: proto.HttpPath.Status
	(*HttpHandler)(nil),        // 3: proto.HttpHandler
	(*HttpHost)(nil),           // 4: proto.HttpHost
	(*HttpPath)(nil),           // 5: proto.HttpPath
	(*HttpParams)(nil),         // 6: proto.HttpParams
	(*HttpCookie)(nil),         // 7: proto.HttpCookie
	(*HttpHeader)(nil),         // 8: proto.HttpHeader
	(*StaticHttpResponse)(nil), // 9: proto.StaticHttpResponse
}
var file_http_handler_proto_depIdxs = []int32{
	0, // 0: proto.HttpHandler.status:type_name -> proto.HttpHandler.Status
	1, // 1: proto.HttpHost.status:type_name -> proto.HttpHost.Status
	6, // 2: proto.HttpPath.set_input:type_name -> proto.HttpParams
	6, // 3: proto.HttpPath.set_output:type_name -> proto.HttpParams
	9, // 4: proto.HttpPath.static_response:type_name -> proto.StaticHttpResponse
	2, // 5: proto.HttpPath.status:type_name -> proto.HttpPath.Status
	8, // 6: proto.HttpParams.headers:type_name -> proto.HttpHeader
	7, // 7: proto.HttpParams.cookies:type_name -> proto.HttpCookie
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_http_handler_proto_init() }
func file_http_handler_proto_init() {
	if File_http_handler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_http_handler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_handler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_handler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_handler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_handler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_handler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_handler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticHttpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_handler_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_http_handler_proto_goTypes,
		DependencyIndexes: file_http_handler_proto_depIdxs,
		EnumInfos:         file_http_handler_proto_enumTypes,
		MessageInfos:      file_http_handler_proto_msgTypes,
	}.Build()
	File_http_handler_proto = out.File
	file_http_handler_proto_rawDesc = nil
	file_http_handler_proto_goTypes = nil
	file_http_handler_proto_depIdxs = nil
}
